import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class BigFatInteger2:
    def getMap(self,A):
        dict={}
        i=2
        tmp=A
        while i*i<=A:
            count=0
            while tmp>1:
                if (tmp % i==0):
                    tmp=int(tmp/i)
                    count+=1
                else:
                    break;
            if (count>0):
                dict[i]=count
            i+=1;
        if(tmp>1):
            dict[tmp]=1
        return dict 

    def isDivisible(self, A, B, C, D):
        dictA=self.getMap(A)
        dictC=self.getMap(C)
        isOK=True

        for key in dictC:
            if key in dictA:
                left=dictA[key]*B
                right=dictC[key]*D
                if (left<right):
                    isOK=False
                    break
            else:
                isOK=False
                break
        if (isOK):
            return "divisible"
        return "not divisible"

    
# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, p2, p3, hasAnswer, p4):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str(p0) + str(",") + str(p1) + str(",") + str(p2) + str(",") + str(p3))
	print(str("]"))
	obj = BigFatInteger2()
	startTime = time.clock()
	answer = obj.isDivisible(p0, p1, p2, p3)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		res = answer == p4
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
		if (hasAnswer):
			print(str("Desired answer:"))
			print(str("\t") + str("\"") + str(p4) + str("\""))
		
		print(str("Your answer:"))
		print(str("\t") + str("\"") + str(answer) + str("\""))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = 6
p1 = 1
p2 = 2
p3 = 1
p4 = "divisible"
all_right = (disabled or KawigiEdit_RunTest(0, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = 2
p1 = 1
p2 = 6
p3 = 1
p4 = "not divisible"
all_right = (disabled or KawigiEdit_RunTest(1, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = 1000000000
p1 = 1000000000
p2 = 1000000000
p3 = 200000000
p4 = "divisible"
all_right = (disabled or KawigiEdit_RunTest(2, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = 8
p1 = 100
p2 = 4
p3 = 200
p4 = "not divisible"
all_right = (disabled or KawigiEdit_RunTest(3, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = 999999937
p1 = 1000000000
p2 = 999999929
p3 = 1
p4 = "not divisible"
all_right = (disabled or KawigiEdit_RunTest(4, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 5 -----
disabled = False
p0 = 2
p1 = 2
p2 = 4
p3 = 1
p4 = "divisible"
all_right = (disabled or KawigiEdit_RunTest(5, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
