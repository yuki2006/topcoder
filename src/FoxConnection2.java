import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class FoxConnection2
{
	public int ways(int[] A, int[] B, int k)
	{
		boolean[][] nodes = new boolean[51][51];
		for (int i = 0; i < A.length; i++) {
			nodes[B[i]][A[i]] = true;
			nodes[A[i]][B[i]] = true;
		}
		if (k == 1) {
			Set<Integer> set = new HashSet<Integer>();
			for (int i = 0; i < nodes.length; i++) {
				set.add(A[i]);
				set.add(B[i]);
			}
			return set.size();
		} else if (k == 2) {
			int count = 0;
			for (int i = 0; i < nodes.length; i++) {
				for (int j = i + 1; j < nodes.length; j++) {
					count += nodes[i][j] ? 1 : 0;
				}
			}
			return count;
		} else {
			
		}
		return 0;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + p2);
		System.out.println("]");
		FoxConnection2 obj;
		int answer;
		obj = new FoxConnection2();
		long startTime = System.currentTimeMillis();
		answer = obj.ways(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				System.out.println("Desired answer:");
				System.out.println("\t" + p3);
			}
			System.out.println("Your answer:");
			System.out.println("\t" + answer);
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		int[] p0;
		int[] p1;
		int p2;
		int p3;

		// ----- test 0 -----
		disabled = false;
		p0 = new int[] { 1, 2, 3 };
		p1 = new int[] { 2, 3, 4 };
		p2 = 2;
		p3 = 3;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = new int[] { 1, 1, 1, 1 };
		p1 = new int[] { 2, 3, 4, 5 };
		p2 = 3;
		p3 = 6;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = new int[] { 1, 2, 3, 4 };
		p1 = new int[] { 2, 3, 4, 5 };
		p2 = 3;
		p3 = 3;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = new int[] { 1, 2, 2, 4, 4 };
		p1 = new int[] { 2, 3, 4, 5, 6 };
		p2 = 3;
		p3 = 6;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = new int[] { 1, 2, 2, 4, 4 };
		p1 = new int[] { 2, 3, 4, 5, 6 };
		p2 = 5;
		p3 = 4;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 5 -----
		disabled = false;
		p0 = new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				1, 1, 1, 1, 1, 1, 1, 1 };
		p1 = new int[] { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
				27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 };
		p2 = 20;
		p3 = 923263934;
		all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 6 -----
		disabled = false;
		p0 = new int[] { 2 };
		p1 = new int[] { 1 };
		p2 = 1;
		p3 = 2;
		all_right = (disabled || KawigiEdit_RunTest(6, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
