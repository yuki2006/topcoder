public class TorusSailingEasy {
    public double expectedTime(int N, int M, int goalX, int goalY) {
        double[][] current = new double[N][M];

        current[0][0] = 1.0;
        double goal = 0.0;
        for (int day = 1; day < 100000; day++) {
            double[][] next = new double[N][M];
            for (int x = 0; x < N; x++) {
                for (int y = 0; y < M; y++) {
                    double e = 0.5 * current[(x + N - 1) % N][(y + M - 1) % M] +
                                0.5 * current[(x + 1) % N][(y + 1) % M];

                    if (x == goalX && y == goalY) {
                        goal += day * e;
                    } else {
                        next[x][y] += e;
                    }

                }
            }
            current = next;
        }
        if (goal == 0.0) {
            return -1;
        }
        return goal;

    }

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, boolean hasAnswer, double p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
		System.out.println("]");
		TorusSailingEasy obj;
		double answer;
		obj = new TorusSailingEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.expectedTime(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			res = answer == answer && Math.abs(p4 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p4));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				System.out.println("Desired answer:");
				System.out.println("\t" + p4);
			}
			System.out.println("Your answer:");
			System.out.println("\t" + answer);
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;
		
		int p0;
		int p1;
		int p2;
		int p3;
		double p4;
		
		// ----- test 0 -----
		disabled = false;
		p0 = 2;
		p1 = 2;
		p2 = 1;
		p3 = 1;
		p4 = 1.0D;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 1 -----
		disabled = false;
		p0 = 2;
		p1 = 2;
		p2 = 0;
		p3 = 1;
		p4 = -1.0D;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 2 -----
		disabled = false;
		p0 = 3;
		p1 = 3;
		p2 = 1;
		p3 = 1;
		p4 = 2.0D;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 3 -----
		disabled = false;
		p0 = 4;
		p1 = 6;
		p2 = 1;
		p3 = 3;
		p4 = 27.0D;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 4 -----
		disabled = false;
		p0 = 7;
		p1 = 7;
		p2 = 3;
		p3 = 3;
		p4 = 12D;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 5 -----
		disabled = false;
		p0 = 7;
		p1 = 7;
		p2 = 5;
		p3 = 5;
		p4 = 10D;
		all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
