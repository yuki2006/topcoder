import math
import string
import itertools
import fractions
import heapq
import collections
import re
import array
import bisect
import random


class WolvesAndSheep:
	def getmin(self, fieldstr):

		X = len(fieldstr[0])
		Y = len(fieldstr)
		field = []
		for y in range(Y):
			tmp = []
			field.append(tmp)
			for x in range(X):
				tmp.append(fieldstr[y][x])

		bordersX = [True for _ in range(X - 1)]
		bordersY = [True for _ in range(Y - 1)]

		for x in range(X - 1):
			if bordersX[x]:
				for y in range(Y):
					if field[y][x + 1] != "." and field[y][x] != "." and field[y][x] != field[y][x + 1]:
						break
				else:
					for y in range(Y):
						if field[y][x + 1] == ".":
							field[y][x + 1] = field[y][x]
						if field[y][x] == ".":
							field[y][x] = field[y][x + 1]

					bordersX[x] = False

		for y in range(Y - 1):
			if bordersY[y]:
				for x in range(X):
					if field[y + 1][x] != "." and field[y][x] != "." and field[y][x] != field[y + 1][x]:
						break
				else:
					bordersY[y] = False
					for x in range(X):
						if field[y + 1][x] == ".":
							field[y + 1][x] = field[y][x]
						if field[y][x] == ".":
							field[y][x] = field[y + 1][x]

		print bordersX
		print bordersY
		return sum(bordersX) + sum(bordersY)

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time


def KawigiEdit_RunTest(testNum, p0, hasAnswer, p1):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("{"))
	for i in range(len(p0)):
		if (i > 0):
			sys.stdout.write(str(","))

		sys.stdout.write(str("\"") + str(p0[i]) + str("\""))

	sys.stdout.write(str("}"))
	print(str("]"))
	obj = WolvesAndSheep()
	startTime = time.clock()
	answer = obj.getmin(p0)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		res = answer == p1

	if (not res):
		print(str("DOESN'T MATCH!!!!"))
		if (hasAnswer):
			print(str("Desired answer:"))
			print(str("\t") + str(p1))

		print(str("Your answer:"))
		print(str("\t") + str(answer))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))

	print(str(""))
	return res


all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = ("W.WSS", "WW.S.", ".SSS.", "SSS.S", ".SS.S")
p1 = 2
all_right = (disabled or KawigiEdit_RunTest(0, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = (".....", ".....", ".....")
p1 = 0
all_right = (disabled or KawigiEdit_RunTest(1, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = (".SS", "...", "S..", "W.W")
p1 = 1
all_right = (disabled or KawigiEdit_RunTest(2, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = ("WWWSWWSSWWW", "WWSWW.SSWWW", "WS.WSWWWWS.")
p1 = 10
all_right = (disabled or KawigiEdit_RunTest(3, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = (".W.S.W.W", "W.W.S.W.", ".S.S.W.W", "S.S.S.W.", ".S.W.W.S", "S.S.W.W.", ".W.W.W.S", "W.W.S.S.")
p1 = 7
all_right = (disabled or KawigiEdit_RunTest(4, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 5 -----
disabled = False
p0 = (
"W.SSWWSSSW.SS", ".SSSSW.SSWWWW", ".WWWWS.WSSWWS", "SS.WSS..W.WWS", "WSSS.SSWS.W.S", "WSS.WS...WWWS", "S.WW.S.SWWWSW",
"WSSSS.SSW...S", "S.WWSW.WWSWSW", ".WSSS.WWSWWWS", "..SSSS.WWWSSS", "SSWSWWS.W.SSW", "S.WSWS..WSSS.", "WS....W..WSS.")
p1 = 24
all_right = (disabled or KawigiEdit_RunTest(5, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 6 -----
disabled = False
p0 = ("WW..SS", "WW..SS", "......", "......", "SS..WW", "SS..WW")
p1 = 2
all_right = (disabled or KawigiEdit_RunTest(6, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))

else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
# Powered by KawigiEdit-pf 2.3.0!
