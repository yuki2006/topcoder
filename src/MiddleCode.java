import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class MiddleCode
{
	public String encode(String s)
	{
		String t = "";
		while (s.length() > 1) {
			int mid = s.length() / 2;
			if (s.length() % 2 == 1) {
				t += s.charAt(mid);
				s = s.substring(0, mid) + s.substring(mid + 1);
			} else {
				if (s.charAt(mid - 1) < s.charAt(mid)) {
					t += s.charAt(mid - 1);
					s = s.substring(0, mid - 1) + s.substring(mid);
				} else {
					t += s.charAt(mid);
					s = s.substring(0, mid) + s.substring(mid + 1);
				}
			}
		}
		return t + s;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		MiddleCode obj;
		String answer;
		obj = new MiddleCode();
		long startTime = System.currentTimeMillis();
		answer = obj.encode(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				System.out.println("Desired answer:");
				System.out.println("\t" + "\"" + p1 + "\"");
			}
			System.out.println("Your answer:");
			System.out.println("\t" + "\"" + answer + "\"");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		String p0;
		String p1;

		// ----- test 0 -----
		disabled = false;
		p0 = "word";
		p1 = "ordw";
		all_right = (disabled || KawigiEdit_RunTest(0, p0, true, p1)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = "aaaaa";
		p1 = "aaaaa";
		all_right = (disabled || KawigiEdit_RunTest(1, p0, true, p1)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = "abacaba";
		p1 = "caabbaa";
		all_right = (disabled || KawigiEdit_RunTest(2, p0, true, p1)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = "shjegr";
		p1 = "ejghrs";
		all_right = (disabled || KawigiEdit_RunTest(3, p0, true, p1)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = "adafaaaadafawafwfasdaa";
		p1 = "afawadafawafaafsadadaa";
		all_right = (disabled || KawigiEdit_RunTest(4, p0, true, p1)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 5 -----
		disabled = false;
		p0 = "abcd";
		p1 = "bcad";
		all_right = (disabled || KawigiEdit_RunTest(5, p0, true, p1)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
