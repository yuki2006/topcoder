import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class FactorialGCD
{
	public int factGCD(int a, int b)
	{
		HashMap<Integer, Integer> mapB = getMap(b);
		int result = 1;
		for (Integer p : mapB.keySet()) {
			int tmp = a;
			int sum = 0;
			while (tmp > 1) {
				int k = tmp / p;
				sum += k;
				tmp = k;
			}
			result *= Math.pow(p, Math.min(mapB.get(p), sum));
		}
		return result;

	}

	private HashMap<Integer, Integer> getMap(int A) {
		HashMap<Integer, Integer> map = new HashMap<>();
		int tmp = A;
		for (long i = 2; i * i <= A; i++) {
			int count = 0;
			while (tmp > 1) {
				if (tmp % i == 0) {
					tmp /= i;
					count++;
				} else {
					break;
				}
			}

			if (count > 0)
				map.put((int) i, count);
		}
		if (tmp > 1) {
			map.put(tmp, 1);
		}
		return map;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		FactorialGCD obj;
		int answer;
		obj = new FactorialGCD();
		long startTime = System.currentTimeMillis();
		answer = obj.factGCD(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		int p0;
		int p1;
		int p2;

		// ----- test 0 -----
		disabled = false;
		p0 = 5;
		p1 = 20;
		p2 = 20;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = 7;
		p1 = 5040;
		p2 = 5040;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = 0;
		p1 = 2425;
		p2 = 1;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = 667024;
		p1 = 1;
		p2 = 1;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = 4;
		p1 = 40;
		p2 = 8;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 5 -----
		disabled = false;
		p0 = 2097711064;
		p1 = 2147483646;
		p2 = 2147483646;
		all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
