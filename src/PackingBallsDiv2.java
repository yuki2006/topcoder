import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class PackingBallsDiv2
{
	public int minPacks(int R, int G, int B)
	{
		int[] list = { R, G, B };
		int count = 0;
		Arrays.sort(list);
		int min = list[0];
		for (int i = 0; i < list.length; i++) {
			list[i] -= min;
		}
		count += min;
		for (int j = 3; j > 1; j--) {
			for (int i = 0; i < 3; i++) {
				int tmp = list[i] / j;
				count += tmp;
				list[i] -= tmp * j;
			}
		}
		if (list[1] + list[2] == 2) {
			count++;
			list[1]--;
			list[2]--;
		}
		return count + list[1] + list[2];
	}

	private int getMin(int R, int G, int B) {
		int min = Math.min(R, Math.min(G, B));
		return min;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
		System.out.println("]");
		PackingBallsDiv2 obj;
		int answer;
		obj = new PackingBallsDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.minPacks(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				System.out.println("Desired answer:");
				System.out.println("\t" + p3);
			}
			System.out.println("Your answer:");
			System.out.println("\t" + answer);
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		int p0;
		int p1;
		int p2;
		int p3;

		// ----- test 0 -----
		disabled = false;
		p0 = 4;
		p1 = 2;
		p2 = 4;
		p3 = 4;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = 1;
		p1 = 7;
		p2 = 1;
		p3 = 3;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = 2;
		p1 = 3;
		p2 = 5;
		p3 = 4;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = 78;
		p1 = 53;
		p2 = 64;
		p3 = 66;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = 100;
		p1 = 100;
		p2 = 100;
		p3 = 100;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ----- test 4 -----
		disabled = false;
		p0 = 1;
		p1 = 2;
		p2 = 2;
		p3 = 2;
		all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;

		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
