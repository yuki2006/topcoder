import math


class MixingColors:
	def minColors(self, colors):
		BITS = int(1 + math.log(log(max(colors), 2)))
		L = len(colors)

		matrix = [[0 for i in xrange(L)] for i in xrange(BITS)]
		for i, c in enumerate(colors):
			for b in xrange(c + 1):
				matrix[b][i] = c & (1 << b)

		for column in xrange(BITS):
			m_column = maxtrix[column]
			if m_column[column] == 1:
				for row in xrange(L):
					if row == column: continue
					if m_column[row] == 1:
						for j in xrange(0, BITS):
							maxtrix[j][row] ^= matrix[j][column]
			else:
				for row in xrange(1, L):
					if m_column[row] == 1:
						tmp=m_column[row]
						m_column[row]m_column[column]

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time


def KawigiEdit_RunTest(testNum, p0, hasAnswer, p1):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("{"))
	for i in range(len(p0)):
		if (i > 0):
			sys.stdout.write(str(","))

		sys.stdout.write(str(p0[i]))

	sys.stdout.write(str("}"))
	print(str("]"))
	obj = MixingColors()
	startTime = time.clock()
	answer = obj.minColors(p0)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		res = answer == p1

	if (not res):
		print(str("DOESN'T MATCH!!!!"))
		if (hasAnswer):
			print(str("Desired answer:"))
			print(str("\t") + str(p1))

		print(str("Your answer:"))
		print(str("\t") + str(answer))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))

	print(str(""))
	return res


all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = (1, 7, 3)
p1 = 3
all_right = (disabled or KawigiEdit_RunTest(0, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = (10,)
p1 = 1
all_right = (disabled or KawigiEdit_RunTest(1, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
p1 = 4
all_right = (disabled or KawigiEdit_RunTest(2, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = (534, 251, 76, 468, 909, 410, 264, 387, 102, 982, 199, 111, 659, 386, 151)
p1 = 10
all_right = (disabled or KawigiEdit_RunTest(3, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = (4, 8, 16, 32, 64, 128, 256, 512, 1024)
p1 = 9
all_right = (disabled or KawigiEdit_RunTest(4, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))

else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
# Powered by KawigiEdit-pf 2.3.0!
