class TwoWaysSorting:
	def sortingMethod(self, stringList):
		lenSort = sorted(stringList, cmp=lambda a, b: cmp(len(a),len(b)))
		lexSort = sorted(stringList, cmp=lambda a, b: cmp(a, b))

		print lenSort, lexSort
		lenFlag = True
		lexFlag = True

		for i in xrange(len(stringList)):
			lenFlag &= lenSort[i] == stringList[i]
			lexFlag &= lexSort[i] == stringList[i]

		if lenFlag & lexFlag:
			return "both"
		elif lenFlag:
			return "lengths"
		elif lexFlag:
			return "lexicographically"
		return "none"

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time


def KawigiEdit_RunTest(testNum, p0, hasAnswer, p1):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("{"))
	for i in range(len(p0)):
		if (i > 0):
			sys.stdout.write(str(","))

		sys.stdout.write(str("\"") + str(p0[i]) + str("\""))

	sys.stdout.write(str("}"))
	print(str("]"))
	obj = TwoWaysSorting()
	startTime = time.clock()
	answer = obj.sortingMethod(p0)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		res = answer == p1

	if (not res):
		print(str("DOESN'T MATCH!!!!"))
		if (hasAnswer):
			print(str("Desired answer:"))
			print(str("\t") + str("\"") + str(p1) + str("\""))

		print(str("Your answer:"))
		print(str("\t") + str("\"") + str(answer) + str("\""))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))

	print(str(""))
	return res


all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = ("a", "aa", "bbb")
p1 = "both"
all_right = (disabled or KawigiEdit_RunTest(0, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = ("c", "bb", "aaa")
p1 = "lengths"
all_right = (disabled or KawigiEdit_RunTest(1, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = ("etdfgfh", "aio")
p1 = "none"
all_right = (disabled or KawigiEdit_RunTest(2, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = ("aaa", "z")
p1 = "lexicographically"
all_right = (disabled or KawigiEdit_RunTest(3, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = ("z",)
p1 = "both"
all_right = (disabled or KawigiEdit_RunTest(4, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 5 -----
disabled = False
p0 = ("abcdef", "bcdef", "cdef", "def", "ef", "f", "topcoder")
p1 = "lexicographically"
all_right = (disabled or KawigiEdit_RunTest(5, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))

else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
# Powered by KawigiEdit-pf 2.3.0!
