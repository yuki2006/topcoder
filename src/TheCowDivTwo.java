import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class TheCowDivTwo {
	public int find(int N, int K) {
		final int mod = 1000000007;
		long[][] dp = new long[49][1000];
		dp[0][0] = 1;
		for (int cowCount = 0; cowCount < N; cowCount++) {
			for (int i = 47; i >= 0; i--) {
				for (int j = 0;j  < N; j++) {
					dp[i + 1][(j + cowCount) % N] += dp[i][j];
					dp[i + 1][(j + cowCount) % N] %= mod;
				}
			}
		}
		return (int) dp[K][0];
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1,
			boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		TheCowDivTwo obj;
		int answer;
		obj = new TheCowDivTwo();
		long startTime = System.currentTimeMillis();
		answer = obj.find(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0
				+ " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		int p0;
		int p1;
		int p2;

		// ----- test 0 -----
		disabled = false;
		p0 = 7;
		p1 = 4;
		p2 = 5;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = 1;
		p1 = 1;
		p2 = 1;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = 58;
		p1 = 4;
		p2 = 7322;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = 502;
		p1 = 7;
		p2 = 704466492;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = 1000;
		p1 = 47;
		p2 = 219736903;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out
						.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
