import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class FoxPlayingGame:
    def theMax(self, nA, nB, paramA, paramB):
        pA=1.0*paramA/1000
        pB=1.0*paramB/1000
        if (paramB>=1000):
            if (0<=paramA):
                return (pA*nA*pB**nB)
            else:
                return pA*nA
        elif(0<=paramB<1000):
            return pA*nA
        elif (paramB<0):
            if (paramA>0):
                nB-=nB%2
                return (pA*nA*abs(pB)**nB)
            else:
                nB-=(nB+1)%2                
                return (abs(pA)*nA*abs(pB)**nB)
        return 0

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, p2, p3, hasAnswer, p4):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str(p0) + str(",") + str(p1) + str(",") + str(p2) + str(",") + str(p3))
	print(str("]"))
	obj = FoxPlayingGame()
	startTime = time.clock()
	answer = obj.theMax(p0, p1, p2, p3)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		res = answer == answer and abs(p4 - answer) <= 1e-9 * max(1.0, abs(p4))
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
		if (hasAnswer):
			print(str("Desired answer:"))
			print(str("\t") + str(p4))
		
		print(str("Your answer:"))
		print(str("\t") + str(answer))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = 5
p1 = 4
p2 = 3000
p3 = 2000
p4 = 240.0
all_right = (disabled or KawigiEdit_RunTest(0, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = 3
p1 = 3
p2 = 2000
p3 = 100
p4 = 6.0
all_right = (disabled or KawigiEdit_RunTest(1, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = 4
p1 = 3
p2 = -2000
p3 = 2000
p4 = -8.0
all_right = (disabled or KawigiEdit_RunTest(2, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = 5
p1 = 5
p2 = 2000
p3 = -2000
p4 = 160.0
all_right = (disabled or KawigiEdit_RunTest(3, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = 50
p1 = 50
p2 = 10000
p3 = 2000
p4 = 5.62949953421312E17
all_right = (disabled or KawigiEdit_RunTest(4, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 5 -----
disabled = False
p0 = 41
p1 = 34
p2 = 9876
p3 = -1234
p4 = 515323.9982341775
all_right = (disabled or KawigiEdit_RunTest(5, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 6 -----
disabled = False
p0 = 31
p1 = 16
p2 = -1234
p3 = -1569
p4 = 32886.75382013723
all_right = (disabled or KawigiEdit_RunTest(6, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------
disabled = False
p0 = 23
p1 = 34
p2 = -9422
p3 = -180
p4 = 39.00708
all_right = (disabled or KawigiEdit_RunTest(6, p0, p1, p2, p3, True, p4) ) and all_right
tests_disabled = tests_disabled or disabled
if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
