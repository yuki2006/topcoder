import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class AlienAndGame {
	public int getNumber(String[] board) {
		boolean[][] table = new boolean[board.length][board[0].length()];
		for (int i = 0; i < table.length; i++) {
			for (int j = 0; j < table[0].length; j++) {
				table[i][j] = board[i].charAt(j) == 'W';
			}
		}
		int max = 0;
		for (int i = 0; i < table.length; i++) {
			for (int j = 0; j < table[0].length; j++) {
				int ret = minCellColumn(table, i, j);
				int ret2 = minCellRow(table, i, j);

				max = Math.max(Math.max(ret, ret2), max);
			}
		}
		return max * max;
	}

	private int minCellRow(boolean[][] table, int i, int j) {
		// ?????????????????????????????????
		int max = 0;
		for (int l = 0; l < 50; l++) {

			for (int j2 = j; j2 < j + l && j2 < table[0].length; j2++) {
				int count = 0;
				for (int k = i; k < i + l && k < table.length; k++) {
					if (table[k][j2] == table[i][j2]) {
						count++;
					} else {
						break;
					}
				}
				max = Math.max(max, count);
			}
		}
		return max;
	}

	private int minCellColumn(boolean[][] table, int i, int j) {
		// ?????????????????????????????????
		int max = 0;
		for (int l = 1; l < 50; l++) {
			for (int k = i; k < j + l && k < table.length; k++) {
				int count = 0;
				for (int j2 = j; k < j + l && j2 < table[0].length; j2++) {
					if (table[k][j2] == table[k][j]) {
						count++;
					} else {
						break;
					}
				}
				max = Math.max(max, count);
			}
		}
		return max;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0,
			boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		AlienAndGame obj;
		int answer;
		obj = new AlienAndGame();
		long startTime = System.currentTimeMillis();
		answer = obj.getNumber(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0
				+ " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		String[] p0;
		int p1;

		// ----- test 0 -----
		disabled = true;
		p0 = new String[] { "BB", "WW" };
		p1 = 4;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = true;
		p0 = new String[] { "W" };
		p1 = 1;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = true;
		p0 = new String[] { "WBBB", "WBBB", "WWWW" };
		p1 = 9;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = true;
		p0 = new String[] { "W", "B", "W", "W", "W" };
		p1 = 1;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = new String[] { "BWBBWBB", "WWBWWBW", "BBBBBBW", "WBBBBWB",
				"BBWWWWB", "WWWWWWW", "BBWWBBB" };
		p1 = 9;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out
						.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
