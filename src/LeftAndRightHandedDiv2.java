import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class LeftAndRightHandedDiv2 {
	public int count(String S) {
		int count = 0;
		for (int i = 0; i < S.length() - 1; i++) {
			if (S.substring(i, i + 2).equals("RL")) {
				count++;
			}
		}
		return count;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, String p0,
			boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		LeftAndRightHandedDiv2 obj;
		int answer;
		obj = new LeftAndRightHandedDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.count(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0
				+ " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		String p0;
		int p1;

		// ----- test 0 -----
		disabled = false;
		p0 = "L";
		p1 = 0;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = "RRR";
		p1 = 0;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = "LRLRLR";
		p1 = 2;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = "LLLRRR";
		p1 = 0;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = "RLRLRL";
		p1 = 3;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, true, p1))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out
						.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
