import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class TheProgrammingContestDivTwo:
    def find(self, T, requiredTime):
    	time=0
    	count=0;
    	sm=0
        for x in sorted(requiredTime):
        	time+=x
        	if (T<time):
        		break
        	count+=1
        	sm+=time

        return [count,sm]

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, hasAnswer, p2):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str(p0) + str(",") + str("{"))
	for i in range(len(p1)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(p1[i]))
	
	sys.stdout.write(str("}"))
	print(str("]"))
	obj = TheProgrammingContestDivTwo()
	startTime = time.clock()
	answer = obj.find(p0, p1)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		print(str("Desired answer:"))
		sys.stdout.write(str("\t") + str("{"))
		for i in range(len(p2)):
			if (i > 0):
				sys.stdout.write(str(","))
			
			sys.stdout.write(str(p2[i]))
		
		print(str("}"))
	
	print(str("Your answer:"))
	sys.stdout.write(str("\t") + str("{"))
	for i in range(len(answer)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(answer[i]))
	
	print(str("}"))
	if (hasAnswer):
		if (len(answer) != len(p2)):
			res = False
		else:
			for i in range(len(answer)):
				if (answer[i] != p2[i]):
					res = False
				
			
		
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = 74
p1 = (47,)
p2 = (1,47)
all_right = (disabled or KawigiEdit_RunTest(0, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = 74
p1 = (4747,)
p2 = (0,0)
all_right = (disabled or KawigiEdit_RunTest(1, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = 47
p1 = (8,5)
p2 = (2,18)
all_right = (disabled or KawigiEdit_RunTest(2, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = 47
p1 = (12,3,21,6,4,13)
p2 = (5,86)
all_right = (disabled or KawigiEdit_RunTest(3, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = 58
p1 = (4,5,82,3,4,65,7,6,8,7,6,4,8,7,6,37,8)
p2 = (10,249)
all_right = (disabled or KawigiEdit_RunTest(4, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 5 -----
disabled = False
p0 = 100000
p1 = (100000,)
p2 = (1,100000)
all_right = (disabled or KawigiEdit_RunTest(5, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
