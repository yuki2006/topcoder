import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class OneDimensionalRobotEasy
{
	public int finalPosition(String commands, int A, int B)
	{
		int p = 0;
		for (char c : commands.toCharArray()) {
			if (c == 'R') {
				p++;
			} else {
				p--;
			}
			if (p < -A) {
				p++;
			}
			if (B < p)
			{
				p--;
			}
		}
		return p;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, String p0, int p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + p1 + "," + p2);
		System.out.println("]");
		OneDimensionalRobotEasy obj;
		int answer;
		obj = new OneDimensionalRobotEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.finalPosition(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				System.out.println("Desired answer:");
				System.out.println("\t" + p3);
			}
			System.out.println("Your answer:");
			System.out.println("\t" + answer);
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		String p0;
		int p1;
		int p2;
		int p3;

		// ----- test 0 -----
		disabled = false;
		p0 = "RRLRRLLR";
		p1 = 10;
		p2 = 10;
		p3 = 2;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = "RRRRR";
		p1 = 3;
		p2 = 4;
		p3 = 4;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = "LLLLLLLLLLR";
		p1 = 2;
		p2 = 6;
		p3 = -1;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = "RRRRRRRLRRLRRRRRRRRRRRRLRLRRRRRRRRLRRRRRLRRRRRRRRR";
		p1 = 5;
		p2 = 20;
		p3 = 20;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = "RLRLLLLLLLRLLLRLLLLLLLLRLLLLLRLLLRRLLLLLRLLLLLRLLL";
		p1 = 34;
		p2 = 15;
		p3 = -30;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		disabled = false;
		p0 = "RRRRRRRR";
		p1 = 1;
		p2 = 3;
		p3 = 3;
		all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
