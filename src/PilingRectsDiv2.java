import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class PilingRectsDiv2
{
	
	public int getmax(int[] X, int[] Y, int limit)
	{
		int maxCount = 0;
		for (int width = 1; width * width <= limit + 1; width++) {
			int height = (int) Math.ceil(1.0 * limit / width);
			int count = 0;
			for (int i = 0; i < X.length; i++) {
				int x = Math.min(X[i], Y[i]);
				int y = Math.max(X[i], Y[i]);
				if (width <= x && height <= y) {
					count++;
				}
			}
			maxCount = Math.max(count, maxCount);
		}
		if (maxCount == 0) {
			return -1;
		}
		return maxCount;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + p2);
		System.out.println("]");
		PilingRectsDiv2 obj;
		int answer;
		obj = new PilingRectsDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.getmax(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				System.out.println("Desired answer:");
				System.out.println("\t" + p3);
			}
			System.out.println("Your answer:");
			System.out.println("\t" + answer);
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		int[] p0;
		int[] p1;
		int p2;
		int p3;

		// ----- test 0 -----
		disabled = true;
		p0 = new int[] { 1, 2, 3, 1 };
		p1 = new int[] { 3, 2, 4, 4 };
		p2 = 3;
		p3 = 3;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = true;
		p0 = new int[] { 4, 7 };
		p1 = new int[] { 7, 4 };
		p2 = 25;
		p3 = 2;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = true;
		p0 = new int[] { 10 };
		p1 = new int[] { 10 };
		p2 = 9999;
		p3 = -1;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = true;
		p0 = new int[] { 10 };
		p1 = new int[] { 3 };
		p2 = 30;
		p3 = 1;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = true;
		p0 = new int[] { 3, 6, 5, 8, 2, 9, 14 };
		p1 = new int[] { 14, 6, 13, 8, 15, 6, 3 };
		p2 = 27;
		p3 = 4;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 5 -----
		disabled = true;
		p0 = new int[] { 121, 168, 86, 106, 36, 10, 125, 97, 53, 26, 148, 129, 41, 18, 173, 55, 13, 73, 91, 174, 177,
				190, 28, 164, 122, 92, 5, 26, 58, 188, 14, 67, 48, 196, 41, 94, 24, 89, 54, 117, 12, 6, 155, 103, 200,
				128, 184, 29, 92, 149 };
		p1 = new int[] { 199, 182, 43, 191, 2, 145, 15, 53, 38, 37, 61, 45, 157, 129, 119, 123, 177, 178, 183, 188,
				132, 108, 112, 137, 92, 59, 75, 196, 102, 152, 114, 121, 181, 93, 32, 3, 24, 116, 4, 163, 96, 159, 196,
				43, 59, 150, 79, 113, 20, 146 };
		p2 = 5345;
		p3 = 24;
		all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 6 -----
		disabled = false;
		p0 = new int[] { 1, 2 };
		p1 = new int[] { 1, 2 };
		p2 = 3;
		p3 = 1;
		all_right = (disabled || KawigiEdit_RunTest(6, p0, p1, p2, true, p3)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
