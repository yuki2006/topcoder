import math, string, itertools, fractions, heapq, collections, re, array, bisect, random

class PilingRectsDiv2:
    def getmax(self, X, Y, limit):
        maxCount = 0;
        for width in xrange(1, 200 + 1):
            for height in xrange(1, 200 + 1):
                if (width * height < limit):
                    continue                    
                count = 0
                for x, y in zip(X, Y):
                    if (width <= x and height <= y or
                        height <= x and width <= y):
                        count += 1
                maxCount = max(maxCount, count)
        return maxCount if maxCount > 0 else -1

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, p2, hasAnswer, p3):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("{"))
	for i in range(len(p0)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(p0[i]))
	
	sys.stdout.write(str("}") + str(",") + str("{"))
	for i in range(len(p1)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(p1[i]))
	
	sys.stdout.write(str("}") + str(",") + str(p2))
	print(str("]"))
	obj = PilingRectsDiv2()
	startTime = time.clock()
	answer = obj.getmax(p0, p1, p2)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		res = answer == p3
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
		if (hasAnswer):
			print(str("Desired answer:"))
			print(str("\t") + str(p3))
		
		print(str("Your answer:"))
		print(str("\t") + str(answer))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = (1, 2, 3, 1)
p1 = (3, 2, 4, 4)
p2 = 3
p3 = 3
all_right = (disabled or KawigiEdit_RunTest(0, p0, p1, p2, True, p3)) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = (4, 7)
p1 = (7, 4)
p2 = 25
p3 = 2
all_right = (disabled or KawigiEdit_RunTest(1, p0, p1, p2, True, p3)) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = (10,)
p1 = (10,)
p2 = 9999
p3 = -1
all_right = (disabled or KawigiEdit_RunTest(2, p0, p1, p2, True, p3)) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = (10,)
p1 = (3,)
p2 = 30
p3 = 1
all_right = (disabled or KawigiEdit_RunTest(3, p0, p1, p2, True, p3)) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = (3, 6, 5, 8, 2, 9, 14)
p1 = (14, 6, 13, 8, 15, 6, 3)
p2 = 27
p3 = 4
all_right = (disabled or KawigiEdit_RunTest(4, p0, p1, p2, True, p3)) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 5 -----
disabled = False
p0 = (121, 168, 86, 106, 36, 10, 125, 97, 53, 26, 148, 129, 41, 18, 173, 55, 13, 73, 91, 174, 177, 190, 28, 164, 122, 92, 5, 26, 58, 188, 14, 67, 48, 196, 41, 94, 24, 89, 54, 117, 12, 6, 155, 103, 200, 128, 184, 29, 92, 149)
p1 = (199, 182, 43, 191, 2, 145, 15, 53, 38, 37, 61, 45, 157, 129, 119, 123, 177, 178, 183, 188, 132, 108, 112, 137, 92, 59, 75, 196, 102, 152, 114, 121, 181, 93, 32, 3, 24, 116, 4, 163, 96, 159, 196, 43, 59, 150, 79, 113, 20, 146)
p2 = 5345
p3 = 24
all_right = (disabled or KawigiEdit_RunTest(5, p0, p1, p2, True, p3)) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
# Powered by KawigiEdit-pf 2.3.0!
