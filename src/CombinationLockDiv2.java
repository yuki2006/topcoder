import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class CombinationLockDiv2 {
	public int minimumMoves(String S, String T) {
		int[] diff = new int[S.length()];
		int[] dp = new int[diff.length];
		for (int i = 0; i < S.length(); i++) {
			dp[i] = diff[i] = (10 + S.charAt(i) - T.charAt(i)) % 10;
		}
		int sum = diff[0];
		for (int i = 1; i < dp.length; i++) {
			if (Math.abs(diff[i] - sum) < Math.abs(diff[i])) {

			}

		}

		System.out.println(dp);
		return dp[dp.length - 1];
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, String p0,
			String p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + ","
				+ "\"" + p1 + "\"");
		System.out.println("]");
		CombinationLockDiv2 obj;
		int answer;
		obj = new CombinationLockDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.minimumMoves(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0
				+ " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		String p0;
		String p1;
		int p2;

		// ----- test 0 -----
		disabled = false;
		p0 = "123";
		p1 = "112";
		p2 = 1;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = "1";
		p1 = "7";
		p2 = 4;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = "607";
		p1 = "607";
		p2 = 0;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = "1234";
		p1 = "4567";
		p2 = 3;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 4 -----
		disabled = false;
		p0 = "020";
		p1 = "909";
		p2 = 2;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 5 -----
		disabled = false;
		p0 = "4423232218340";
		p1 = "6290421476245";
		p2 = 18;
		all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, true, p2))
				&& all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out
						.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
